syntax = "proto3";

package query;
option go_package = "bothan-api/query";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

// Query defines the gRPC service.
service Query {
  // RPC method that returns all prices of requested symbols.
  rpc Prices(QueryPricesRequest) returns (QueryPricesResponse) {
    option (google.api.http).get = "/prices/{symbols}";
  }
}

// QueryPricesRequest is the request type for the PriceService/GetPrices RPC
// method.
message QueryPricesRequest {
  repeated string symbols = 1 [ (gogoproto.nullable) = false ];
}

// QueryPricesResponse is the response type for the PriceService/GetPrices RPC
// method.
message QueryPricesResponse {
  repeated PriceData prices = 1 [ (gogoproto.nullable) = false ];
}

// PriceData defines the data of a symbol price.
message PriceData {
  // The symbol of the price.
  string symbol = 1;
  // The price of the symbol.
  string price = 2;
  // PriceOption defines the price option of a symbol.
  PriceOption price_option = 3;
}

// PriceOption defines the price option of a price.
enum PriceOption {
  option (gogoproto.goproto_enum_prefix) = false;

  // PRICE_OPTION_UNSPECIFIED defines an unspecified price option.
  PRICE_OPTION_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "PriceOptionUnspecified" ];
  // PRICE_OPTION_UNSUPPORTED defines an unsupported price option.
  PRICE_OPTION_UNSUPPORTED = 1
      [ (gogoproto.enumvalue_customname) = "PriceOptionUnsupported" ];
  // PRICE_OPTION_UNAVAILABLE defines an unavailable price option.
  PRICE_OPTION_UNAVAILABLE = 2
      [ (gogoproto.enumvalue_customname) = "PriceOptionUnavailable" ];
  // PRICE_OPTION_AVAILABLE defines an available price option.
  PRICE_OPTION_AVAILABLE = 3
      [ (gogoproto.enumvalue_customname) = "PriceOptionAvailable" ];
}
