syntax = "proto3";

package query;

import "google/api/annotations.proto";

option go_package = "bothan-api/query";

// Query defines the gRPC service.
service Query {
  // RPC method that returns all prices of requested signal ids.
  rpc CryptoSpotPrice(CryptoSpotPriceRequest) returns (CryptoSpotPriceResponse) {
    option (google.api.http).get = "/crypto_spot_price/{signal_ids}";
  }
}

// QueryPricesRequest is the request type for the PriceService/GetPrices RPC
// method.
message CryptoSpotPriceRequest {
  repeated string signal_ids = 1;
  int32 precision = 2;
}

// QueryPricesResponse is the response type for the PriceService/GetPrices RPC
// method.
message CryptoSpotPriceResponse {
  repeated SpotPriceInfo spot_price_infos = 1;
}

// AssetPrice contains the price of a signal ID.
message SpotPriceInfo {
  // The asset's signal ID.
  string signal_id = 1;
  // The asset's price.
  int64 price = 2;
  // The asset's price status.
  SpotPriceInfoStatus status = 3;
}

// Status is the status that defines the AssetPrice result.
enum SpotPriceInfoStatus {
  UNSPECIFIED = 0;
  UNSUPPORTED = 1;
  UNAVAILABLE = 2;
  AVAILABLE = 3;
}
