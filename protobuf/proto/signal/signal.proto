syntax = "proto3";

package signal;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/bothan/bothan-api/client/proto/signal";

// SignalService defines the gRPC service responsible for updating the registry
// and managing active signal IDs.
service SignalService {
  // Updates the registry with the given IPFS hash and version.
  // The registry stores metadata and configuration data that can be referenced
  // by other parts of the system.
  rpc UpdateRegistry(UpdateRegistryRequest) returns (google.protobuf.Empty) {
    option (google.api.http).post = "/registry";
  }

  // Pushes records to the monitoring service.
  // Monitoring records are used to track the computation of signals.
  rpc PushMonitoringRecords(PushMonitoringRecordsRequest) returns (google.protobuf.Empty) {
    option (google.api.http).post = "/monitoring_records";
  }
}

// UpdateRegistryRequest is the request message for the UpdateRegistry RPC method.
// It contains the IPFS hash and version information needed to update the registry.
message UpdateRegistryRequest {
  // The IPFS hash pointing to the registry data.
  string ipfs_hash = 1;
  // The version of the registry.
  string version = 2;
}

// PushMonitoringRecordsRequest is the request message for the PushMonitoringRecords RPC method.
// It contains the uuid of the records that should be pushed to the monitoring service.
message PushMonitoringRecordsRequest {
  // The uuid of a list of monitoring records to be pushed to the monitoring service.
  string uuid = 1;

  // The tx hash of the transaction associated with the monitoring records.
  string tx_hash = 2;
}
